/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package backend;

import io.vertx.core.http.HttpMethod;
import io.vertx.core.json.*;

import java.util.UUID;

import io.vertx.core.*;
import io.vertx.ext.jdbc.JDBCClient;
import io.vertx.ext.web.Router;
import io.vertx.ext.web.RoutingContext;
import io.vertx.ext.web.handler.CorsHandler;

public class App extends AbstractVerticle{

    private JDBCClient client;
    
    @Override
    public void start(){

        // ========  connection with database ======== //
        JsonObject config = new JsonObject()
        .put("url", "jdbc:mysql://localhost:3306/taskdb")  // Database URL
        .put("driver_class", "com.mysql.cj.jdbc.Driver")          // MySQL driver
        .put("user", "neeraj")                                      // Database username
        .put("password", "123")                                    // Database password
        .put("max_pool_size", 30);                                 // Max pool size (optional)

        // Create JDBC client
        client = JDBCClient.createShared(vertx, config);



        Router router = Router.router(vertx);

        router.route().handler(CorsHandler.create("*")  // Allow requests from any origin
        .allowedMethod(HttpMethod.GET)             // Allow specific HTTP methods
        .allowedMethod(HttpMethod.POST)
        .allowedMethod(HttpMethod.PUT)
        .allowedMethod(HttpMethod.DELETE)
        .allowedHeader("Access-Control-Allow-Headers")
        .allowedHeader("Content-Type")
        .allowedHeader("Authorization"));

        router.get("/master").handler(this:: getMaster);

        // Create an HTTP server
        vertx.createHttpServer()
            .requestHandler(router)
            .listen(8080,res->{
                if(res.succeeded()){
                    System.out.println("server started at http://localhost:8080");
                }else{
                    System.out.println(res);
                }
            });

    }

    private void getMaster(RoutingContext context){
        HttpMethod method = context.request().method();
        System.out.println("HTTP method is "+ method);

        String path = context.request().path();

        String query = "select * from masterTasks;";

        client.query(query,res->{
            if(res.succeeded()){
                System.out.println("after succeed");
                // System.out.println();

                JsonArray jsonArray = new JsonArray(res.result().getRows().toString());
                // System.out.println(jsonArray);
               
                for(int i=0;i<jsonArray.size();i++){
                    //======== output =======//
                    // JsonObject jsonObject = jsonArray.getJsonObject(i);
                    String outputFormatString = jsonArray.getJsonObject(i).getString("output_format");
                    JsonObject outputFormat = new JsonObject(outputFormatString);
                    jsonArray.getJsonObject(i).put("output_format",outputFormat);

                    //======== input =======//
                    outputFormatString = jsonArray.getJsonObject(i).getString("input_format");
                    JsonObject inputFormat = new JsonObject(outputFormatString);
                    jsonArray.getJsonObject(i).put("input_format",inputFormat);


                    //======== eta =======//
                    outputFormatString = jsonArray.getJsonObject(i).getString("eta");
                    JsonObject etaFormat = new JsonObject(outputFormatString);
                    jsonArray.getJsonObject(i).put("eta",etaFormat);
                }


                // JsonArray cleanedArray = JsonCleaner.cleanJsonArray(jsonArray);


                context.response()
                .setStatusCode(200)
                .setStatusMessage("ok")
                .end(jsonArray.toString());
            }else{
                context.response()
                .setStatusCode(500)
                .end("database error");
            }
        });

        // context.response().setStatusCode(200).setStatusMessage("ok").end("request success");
    }

    public static void main(String[] args) {
        Vertx vertx = Vertx.vertx();
        vertx.deployVerticle(new App());
    }
}
